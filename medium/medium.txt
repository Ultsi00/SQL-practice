
*****
Q: Show unique birth years from patients and order them by ascending.

    SELECT distinct(YEAR(birth_date))
    FROM patients
    ORDER BY birth_date ASC;

*****
Q:  Show unique first names from the patients table which only occurs once in the list.
    For example, if two or more people are named 'John' in the first_name column,
    then don't include their name in the output list. If only 1 person is named 'Leo',
    then include them in the output.

    SELECT first_name
    FROM patients
    GROUP BY first_name
    HAVING COUNT(*) = 1;

*****
Q:  Show patient_id and first_name from patients where their first_name start and ends with 's' 
    and is at least 6 characters long

    SELECT patient_id, first_name
    FROM patients
    WHERE	first_name LIKE 's%' AND first_name LIKE '%s'
        AND LEN(first_name) >= 6;

*****
Q:  Show patient_id, first_name, last_name from patients whos diagnosis is 'Dementia'.
    Primary diagnosis is stored in the admissions table.

    SELECT first_name, last_name, patients.patient_id
    FROM patients
    JOIN admissions
    ON patients.patient_id = admissions.patient_id
    WHERE diagnosis = 'Dementia';

*****
Q:  Display every patient's first_name.
    Order the list by the length of each name and then by alphbetically

    SELECT first_name
    FROM patients
    ORDER BY LEN(first_name), first_name ASC;

*****
Q:  Show the total amount of male patients and the total amount of female patients in the patients table.
    Display the two results in the same row.

    SELECT
    	(SELECT COUNT(gender) FROM patients WHERE gender = 'M') AS males,
        (SELECT COUNT(gendeR) FROM patients WHERE gender = 'F') AS females;

alternatively:

    SELECT 
    SUM(Gender = 'M') as male_count, 
    SUM(Gender = 'F') AS female_count
    FROM patients

*****
Q:  Show first and last name, allergies from patients which have allergies to either 'Penicillin' 
    or 'Morphine'. Show results ordered ascending by allergies then by first_name then by last_name.

    SELECT allergies, first_name, last_name
    FROM patients
    WHERE allergies = 'Penicillin' OR allergies = 'Morphine'
    ORDER BY allergies, first_name, last_name ASC;

*****
Q: Show patient_id, diagnosis from admissions. Find patients admitted multiple times for the same diagnosis.

    SELECT patient_id, diagnosis
    FROM admissions
    GROUP BY patient_id, diagnosis
    HAVING COUNT(diagnosis) > 1;

*****
Q:  Show the city and the total number of patients in the city.
    Order from most to least patients and then by city name ascending.

    SELECT COUNT(*), city
    FROM patients
    GROUP BY city
    ORDER BY COUNT(city) DESC, city ASC;

*****
Q:  Show first name, last name and role of every person that is either patient or doctor.
    The roles are either "Patient" or "Doctor"
    # "'Patient' AS role" creates a new column, titled 'role', default value as 'Patient',
    #whereas similarity occurs for 'Doctor'

    SELECT first_name, last_name, 'Patient' AS role FROM patients
    	UNION ALL
    SELECT first_name, last_name, 'Doctor' AS role FROM doctors;

*****
Q:  Show all allergies ordered by popularity. Remove NULL values from query.
    #without GROUP BY, the result is a false single row

    SELECT allergies, COUNT(*)
    FROM patients
    WHERE allergies IS NOT null
    GROUP BY allergies
    ORDER BY COUNT(allergies) DESC;

*****
Q:  Show all patient's first_name, last_name, and birth_date who were born in the 1970s decade.
    Sort the list starting from the earliest birth_date.

    SELECT first_name, last_name, birth_date
	FROM patients
    WHERE YEAR(birth_date) BETWEEN 1970 AND 1979
    ORDER BY birth_date ASC;

*****
Q:  Display each patient's full name in a single column. Their last_name in all upper letters must appear first,
    then first_name in all lower case letters. Separate the last_name and first_name with a comma. 
    Order the list by the first_name in decending order, e.g: SMITH,jane

    SELECT CONCAT(UPPER(last_name),',',lower(first_name)) AS 'name'
	FROM patients
    ORDER BY first_name DESC;

*****
Q:  Show the province_id(s), sum of height; where the total sum of its patient's height 
    is greater than or equal to 7,000.

    SELECT SUM(height), province_id
    FROM patients
    GROUP BY province_id
    HAVING SUM(height) >= 7000;

*****
Q:  Show the difference between the largest weight and smallest weight for patients with the last name 'Maroni

    SELECT MAX(weight) - MIN(weight)
    FROM patients
    WHERE last_name IS 'Maroni';

*****
Q:  Show all of the days of the month (1-31) and how many admission_dates occurred on that day. 
    Sort by the day with most admissions to least admissions.

        SELECT
	        COUNT(admission_date) AS 'admissions_per_day',
            DAY(admission_date) AS 'day_number'
        FROM admissions
        GROUP BY day_number 
        ORDER BY COUNT(admission_date) DESC

*****
Q:  Show all columns for patient_id 542's most recent admission_date.

    SELECT *
    FROM admissions
    WHERE patient_id = 542
    GROUP BY patient_id
    HAVING discharge_date = MAX(discharge_date)

*****
Q:  Show patient_id, attending_doctor_id, and diagnosis for admissions that match one of the two criteria:
        1. patient_id is an odd number and attending_doctor_id is either 1, 5, or 19.
        2. attending_doctor_id contains a 2 and the length of patient_id is 3 characters.

    SELECT patient_id, attending_doctor_id, diagnosis
    FROM admissions
    WHERE	(patient_id % 2 = 1 AND attending_doctor_id in (1, 5, 19))
    		OR
    		(attending_doctor_id LIKE '%2%' AND LEN(patient_id) = 3);
    
*****
Q:  Show first_name, last_name, and the total number of admissions attended for each doctor.
    Every admission has been attended by a doctor.

    SELECT first_name, last_name, COUNT(*)
    FROM doctors
    JOIN admissions
    ON doctors.doctor_id = admissions.attending_doctor_id
    GROUP BY doctor_id

*****
Q:  For each doctor, display their id, full name, and the first and last admission date they attended.

    SELECT	doctor_id, 
		CONCAT(first_name," ",last_name) AS full_name, 
		MIN(admission_date) as 'first_adm_date',
        MAX(admission_date) AS 'last_adm_date'
    FROM doctors
    JOIN admissions
    ON doctors.doctor_id = admissions.attending_doctor_id
    GROUP BY doctor_id

*****
Q: Display the total amount of patients for each province. Order by descending.

    SELECT COUNT(patient_id) AS 'tot_patients', province_name
    FROM province_names
    JOIN patients
    ON province_names.province_id = patients.province_id
    GROUP BY province_name
    ORDER BY tot_patients DESC

*****
Q:  For every admission, display the patient's full name, their admission diagnosis,
    and their doctor's full name who diagnosed their problem.

    SELECT	CONCAT(patients.first_name," ", patients.last_name) as 'pat_full_name',
    		CONCAT(doctors.first_name," ", doctors.last_name) AS 'doc_full_name',
            diagnosis,
    FROM patients
    JOIN admissions ON patients.patient_id = admissions.patient_id
    JOIN doctors ON doctors.doctor_id = admissions.attending_doctor_id

*****
Q:  Display the number of duplicate patients based on their first name and last name.
    Example: A patient with an identical name can be considered a duplicate.

    
*****
Q:  Display patient's full name, height in the unit feet rounded to 1 decimal, 
    weight in the unit pounds rounded to 0 decimals, birth_date, gender non abbreviated.
    Convert CM to feet by dividing by 30.48.
    Convert KG to pounds by multiplying by 2.205.


*****
Q:  Show patient_id, first_name, last_name from patients whose does not have any records in the admissions table.
    (Their patient_id does not exist in any admissions.patient_id rows.)
